import joblib
import pefile

headers = ['MajorLinkerVersion', 'MinorLinkerVersion', 'SizeOfCode', 'BaseOfCode',
           'SizeOfImage', 'Subsystem', 'SizeOfHeapCommit', 'SectionsMaxEntropy',
           'ResourcesMeanSize', 'ResourcesMinSize']


def extract_infos(pe):
    res = [0] * len(headers)
    res[0] = pe.OPTIONAL_HEADER.MajorLinkerVersion
    res[1] = pe.OPTIONAL_HEADER.MinorLinkerVersion
    res[2] = pe.OPTIONAL_HEADER.SizeOfCode
    res[3] = pe.OPTIONAL_HEADER.BaseOfCode
    res[4] = pe.OPTIONAL_HEADER.SizeOfImage
    res[5] = pe.OPTIONAL_HEADER.Subsystem
    res[6] = pe.OPTIONAL_HEADER.SizeOfHeapCommit
    return res

PATH = "/malware_detection/test_files/1.exe"

features = extract_infos(pefile.PE(PATH))

print(features)
clf = joblib.load('malware_detection/model/best_model.pkl')

# Fingers crossed, let's see if the model can predict the file!

prediction = clf.predict([features])

print("The file is %s" % ("malicious" if prediction[0] == 0 else "legitimate"))

# Woo! We did it!